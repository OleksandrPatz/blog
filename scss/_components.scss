///////////////////////////////////////////
/// LOGO

.logo {
  height: 4rem;
  margin-left: 5rem;

  @media only screen and (max-width: $bp-small) {
    margin-left: 0;
  }
}

///////////////////////////////////////////
/// SEARCH

.search {
  // we don't want search element (1)grow, (2)shrik and (3)ocupite 40% of header
  flex: 0 0 40%;

  //centred all elements
  display: flex;
  justify-content: center;
  align-items: center;

  @media only screen and (max-width: $bp-small) {
    order: 1;
    // increase the width of input to move it for the next line
    flex: 0 0 100%;
    background-color: var(--color-grey-light-3);
  }

  &__input {
    //font-size and family don't direct inherit values, we have to add it manualy
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    margin-right: -5.5rem;
    padding: 0.7rem 2rem;
    border-radius: 15rem;
    width: 90%;
    transition: all 0.3s;

    &:focus {
      width: 100%;
      outline: none;
    }

    &::placeholder {
      font-weight: 100;
      color: var(--color-grey);
    }
  }
  // select neighbor element
  &__input:focus + &__button:focus {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    padding: 0;
    border-radius: 50%;
    border: none;
    background-color: var(--color-grey-light-3);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    // change color of icon
    fill: var(--color-grey-dark-3);
  }
}

///////////////////////////////////////////
/// USER NAVIGATION
///

.user-nav {
  //user-nav is flex-item with property align-item-center(locate item in the centre of element and hight = content.
  //we want to height of each user-nav__item = 100% of user-nav
  align-self: stretch;
  display: flex;
  align-items: center;

  // to write style only for direct children of user-nav
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    // centred user-nav items
    display: flex;
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;

    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    //to center the text in the element
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &__user-photo {
    margin-right: 1rem;
    height: 4rem;
    border-radius: 50%;
  }
}

//////////////////////////////////////////////////
/// SIDE NAV

.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    margin: 0;
  }

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;

      @media only screen and (max-width: $bp-medium) {
        margin-bottom: 0;
      }
    }

    @media only screen and (max-width: $bp-medium) {
      flex: 1;
    }
  }

  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    // we use delay=0.2s for width
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
      background-colour 0.1s;
  }

  // use class active for choosen menu
  &__item:hover::before,
  &__item-active::before {
    transform: scaleY(1);
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    padding: 1.5rem 3rem;
    position: relative;
    z-index: 2;

    display: flex;
    align-self: center;

    @media only screen and (max-width: $bp-medium) {
      justify-content: center;
      padding: 2rem;
    }

    @media only screen and (max-width: $bp-small) {
      flex-direction: column;
      align-items: center;
      padding: 1.5rem 0.5rem;
      gap: 0.7rem;
    }
  }

  &__icon {
    width: 2rem;
    height: 2rem;
    margin-right: 2rem;
    // the color of parent element Це спеціальне ключове слово, яке вказує на поточний колір тексту або обрамлення батьківського елемента. Якщо ви встановите fill: currentColor; для SVG-елемента, він буде заповнюватися тим самим кольором, який встановлений для тексту або обрамлення батьківського елемента.
    fill: currentColor;

    @media only screen and (max-width: $bp-small) {
      margin-right: 0;
      height: 1.5rem;
      width: 1.5rem;
    }
  }
}

/////////////////////////////////////////////////
/// LEGAL TEXT
.legal {
  font-size: 1.2rem;
  text-align: center;
  padding: 1.5rem;
  color: var(--color-grey-light-4);

  @media only screen and (max-width: $bp-medium) {
    display: none;
  }
}
/////////////////////////////////////////////////
/// GALLERY

.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block;
  }
}

/////////////////////////////////////////////////
/// RESORT OVERVIEW

.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);
  background-color: #fff;

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
      padding-right: 0.5rem;
    }
  }

  // trick  margin-right: auto. with diplay flex.
  //when we want to separate  one group of elemnts from other.
  &__stars {
    margin-right: auto;
    // to remove white space below the svg icons, assign display:flex to parrent.
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    height: 1.75rem;
    width: 1.75rem;
    fill: var(--color-primary);

    @media only screen and (max-width: $bp-small) {
      height: 1.2rem;
      width: 1.2rem;
    }
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }

  &__raiting {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    padding: 0 2.25rem;
    align-self: stretch;

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

    @media only screen and (max-width: $bp-small) {
      padding: 0 1.5rem;
      margin-left: 1rem;
    }
  }

  &__raiting-count {
    font-size: 0.8rem;
    text-transform: uppercase;

    @media only screen and (max-width: $bp-small) {
      font-size: 0.5rem;
    }
  }

  // to reduce distance betwen flex elemnts, we can use negative margin
  &__raiting-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
    }
  }
}

/////////////////////////////////////////////////
/// BUTTON INLINE
///
// assign font-size inherit to  the button, it will make the lement more REUSABLE
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor;
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.3s;

  & span {
    margin-left: 3px;
    transition: margin-left 0.2s;
  }

  //when we assign color of border to current color, after hover effect it will automatically reasigned border color to hover state text color.
  &:hover {
    color: var(--color-grey-dark-1);
    &:hover span {
      margin-left: 8px;
    }
  }

  &:focus {
    outline: none;
    animation: pulsive 1s infinite;
  }

  @keyframes pulsive {
    0% {
      transform: scale(1);
      box-shadow: none;
    }

    50% {
      transform: scale(1.025);
      box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.15);
    }
    100% {
      transform: scale(1);
      box-shadow: none;
    }
  }
}

/////////////////////////////////////////////////
///PARAGRAPH
.paragraph {
  &:not(:last-of-type) {
    margin-bottom: 2rem;
    line-height: 1.6;
    letter-spacing: 1.7;
  }
}

/////////////////////////////////////////////////
/// LIST
.list {
  list-style: none;

  margin: 3rem 0;
  padding: 3rem 0;
  border-bottom: var(--line);
  border-top: var(--line);

  display: grid;
  grid-template-columns: 1fr 1fr;

  row-gap: 1.2rem;

  @media only screen and (max-width: $bp-small) {
    grid-template-columns: 1fr;
  }

  &__item {
    padding-left: 3.6rem;
    @media only screen and (max-width: $bp-small) {
    }
  }

  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    //   // Older browser
    background-image: url(../img/chevron-thin-right.svg);
    background-size: cover;

    @supports (-webkit-mask-image: url()) or (mask-image: url()) {
      background-color: var(--color-primary);
      -webkit-mask-image: url(../img/chevron-thin-right.svg);
      -webkit-mask-size: cover;
      mask-image: url(../img/chevron-thin-right.svg);
      mask-size: cover;
      background-image: none;
    }
  }
}
/////////////////////////////////////////////////
/// RECOMMEND
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center;
  gap: 1rem;

  &__count {
    margin-right: auto;
  }
  &__friends {
    display: flex;
  }

  &__photo {
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid white;

    &:not(:last-child) {
      margin-right: -2rem;
    }
  }
}

/////////////////////////////////////////////////
/// REVIEW

.review {
  position: relative;
  background-color: #fff;
  padding: 3rem;
  margin-bottom: 3.5rem;
  box-shadow: var(--shadow-light);
  overflow: hidden;
  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-bottom: 2.5rem;
  }

  &__text {
    margin-bottom: 2rem;
    z-index: 10;
    position: relative;
  }
  &__user {
    display: flex;
    align-items: center;
  }
  &__photo {
    width: 4.5rem;
    height: 4 5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }
  &__user-box {
    margin-right: auto;
  }
  &__user-name {
    color: var(--color-grey-dark-1);
    margin-bottom: 0.4rem;
    text-transform: uppercase;
    font-size: 1.1rem;
    font-weight: 600;
  }
  &__user-date {
    font-size: 1rem;
  }
  &__raiting {
    font-size: 2.25rem;
    font-weight: 300;
    color: var(--color-primary);
  }

  &::before {
    content: "\201C";
    position: absolute;
    top: -2.7rem;
    left: -1rem;
    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    line-height: 1;
    z-index: 1;
  }
}

/////////////////////////////////////////////////
/// RECOMMEND
.cta {
  text-align: center;
  padding: 3.5rem 0;
  &__book-now {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    margin-bottom: 2.5rem;
  }
}

/////////////////////////////////////////////////
/// BTN
.btn {
  position: relative;
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 10rem;
  border: none;
  background-image: linear-gradient(
    to right bottom,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  color: #fff;
  overflow: hidden;
  cursor: pointer;

  & > * {
    display: inline-block;
    height: 100%;
    width: 100%;
    transition: all 0.4s;
  }
  &__visible {
    padding: 2rem 7.5rem;
  }

  &__invisible {
    position: absolute;
    top: -100%;
    left: 0;
    padding: 2rem 2rem;
  }

  &:hover {
    background-image: linear-gradient(
      to left bottom,
      var(--color-primary-light),
      var(--color-primary-dark)
    );
  }

  &:hover &__visible {
    transform: translateY(100%);
  }

  &:hover &__invisible {
    top: 0;
  }

  &:focus {
    outline: none;
    animation: pulsive 1s infinite;
  }
}

///////////////////////////////////////////////
///  POPUP
///
.popup {
  display: none; /* Start hidden */
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s linear 0.5s, opacity 0.5s linear;

  position: relative;
  transition: opacity 0.5s ease;
  // visibility: hidden;
  // opacity: 0;
  height: 100vh;
  width: 100vw;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(#000000, 0.8);
  backdrop-filter: blur(8px);
  z-index: 1000;

  display: flex;
  justify-content: center;
  align-items: center;

  &__close {
    position: absolute;
    top: -4rem;
    right: -4rem;
    font-size: 3rem;
    color: var(--color-grey-light-3);
    cursor: pointer;
    z-index: 9999;
    @media only screen and (max-width: $bp-medium) {
      right: 3rem;
      top: 0;
    }
  }

  &__content {
    position: relative;
    max-width: 80rem;
    margin: 0 auto;
    box-shadow: 0 2.4rem 4.8rem rgba(0, 0, 0, 0.3);
    border-radius: 5px;

    background-image: linear-gradient(
      225deg,
      var(--color-primary-light),
      var(--color-primary-dark)
    );

    display: grid;
    grid-template-columns: 2.3fr 3fr;
    justify-content: center;
    align-content: center;

    opacity: 0.1;
    transform: scale(0.1);
    transition: transform 0.5s ease-out 0.2s;
    @media only screen and (max-width: $bp-small) {
      grid-template-columns: 1fr;
      max-width: 50rem;
      margin: 0 auto;
    }
  }

  &__img-box img {
    display: block;

    opacity: 0.8;

    @media only screen and (max-width: $bp-small) {
      display: none;
    }
  }

  &__text-box {
    padding: 1.8rem;
    font-size: 1.8rem;
    color: #fff;
  }
  &__content-box {
    display: inline-block;
  }
  &__heading {
    font-size: 3.2rem;
    line-height: 1.8;
    margin-bottom: 2.4rem;
  }
  &__text {
    letter-spacing: 1.5apx;
    color: inherit;
  }

  &__label {
    font-size: 1.8rem;
  }

  &__input {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 2.4rem;
    margin-bottom: 1.2rem;
    padding: 1rem;

    & input {
      padding: 0.8rem;
      border: none;
      border-radius: 3px;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
      color: var(--color-grey-dark-1);
    }
    &::placeholder {
      color: var(--color-grey-dark-3);
      &:focus {
        outline: none;
      }

      &::placeholder {
        font-weight: 100;
        color: var(--color-grey);
      }
    }

    &-box {
      display: flex;
      flex-direction: column;
      align-content: center;
      gap: 0.8rem;
    }
    &-box:last-child {
      align-self: center;
      justify-self: baseline;
    }
  }
}

.popup--active {
  display: flex; /* Make sure to display it before making it visible */
  visibility: visible;
  opacity: 1;
  transition-delay: 0s;
}

.btn-popup {
  padding: 1.4rem 3.6rem;
  color: var(--color-grey-dark-1);
  font-weight: 600;
  background-image: linear-gradient(var(--color-grey-light-1));

  &:hover {
    background-image: inherit;
  }
}

.popup--active .popup__content {
  transform: scale(1);
  opacity: 1;
}

///////////////////////////////////////////
/// SLIDER
.tours {
  // Your existing styles for the tours section

  .slider-container {
    height: 50vh; // Set slider container height to 50% of the viewport height
    position: relative; // Position the buttons relative to the container

    .slider {
      // Your existing styles for the slider
      display: flex;
      width: 100%; // Ensure images take full width of container
      overflow-x: scroll; // Enable horizontal scrolling for images
      scroll-snap-type: x mandatory; // Snap images to container's scroll area

      img {
        // Your existing styles for the slider images
        flex: 0 0 auto; // Prevent images from shrinking or growing
        width: 100%; // Ensure images take full width of container
        scroll-snap-align: start; // Snap images to start of scroll area
      }
    }

    .slider__button {
      width: 4rem;
      height: 4;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      background-color: rgba(255, 255, 255, 0.7);
      border: none;

      border-radius: 50%;
      color: var(--color-grey-dark-1);
      padding: 1rem; /* Adjust padding as needed */
      font-size: 2.4rem; /* Adjust font size as needed */
      cursor: pointer;

      &--prev {
        left: 2rem;
      }

      &--next {
        right: 2rem;
      }
    }
  }
}
